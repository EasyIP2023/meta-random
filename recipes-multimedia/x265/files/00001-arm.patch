diff --git a/source/CMakeLists.txt b/source/CMakeLists.txt
index a407271b4..d95fcacde 100755
--- a/source/CMakeLists.txt
+++ b/source/CMakeLists.txt
@@ -40,7 +40,7 @@ SET(CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake" "${CMAKE_MODULE_PATH}")
 # System architecture detection
 string(TOLOWER "${CMAKE_SYSTEM_PROCESSOR}" SYSPROC)
 set(X86_ALIASES x86 i386 i686 x86_64 amd64)
-set(ARM_ALIASES armv6l armv7l aarch64)
+set(ARM_ALIASES armv5tel armv6l armv7l aarch64)
 list(FIND X86_ALIASES "${SYSPROC}" X86MATCH)
 list(FIND ARM_ALIASES "${SYSPROC}" ARMMATCH)
 set(POWER_ALIASES ppc64 ppc64le)
@@ -76,8 +76,16 @@ elseif(ARMMATCH GREATER "-1")
         set(ARM64 1)
         add_definitions(-DX265_ARCH_ARM=1 -DX265_ARCH_ARM64=1 -DHAVE_ARMV6=0)
     else()
-        message(STATUS "Detected ARM target processor")
-        add_definitions(-DX265_ARCH_ARM=1 -DX265_ARCH_ARM64=0 -DHAVE_ARMV6=1)
+      if(${SYSPROC} MATCHES "armv5.*")
+          message(STATUS "Detected ARMV5 system processor")
+          add_definitions(-DX265_ARCH_ARM=1 -DX265_ARCH_ARM64=0 -DHAVE_ARMV6=0 -DHAVE_NEON=0)
+      elseif(${SYSPROC} STREQUAL "armv6l")
+          message(STATUS "Detected ARMV6 system processor")
+          add_definitions(-DX265_ARCH_ARM=1 -DX265_ARCH_ARM64=0 -DHAVE_ARMV6=0 -DHAVE_NEON=0)
+      elseif(${SYSPROC} STREQUAL "armv7l")
+          message(STATUS "Detected ARMV7 system processor")
+          add_definitions(-DX265_ARCH_ARM=1 -DX265_ARCH_ARM64=0 -DHAVE_ARMV6=0 -DHAVE_NEON=0 -fPIC)
+      endif()
     endif()
 else()
     message(STATUS "CMAKE_SYSTEM_PROCESSOR value `${CMAKE_SYSTEM_PROCESSOR}` is unknown")
@@ -241,6 +249,8 @@ if(GCC)
     if(ARM AND CROSS_COMPILE_ARM)
         if(ARM64)
             set(ARM_ARGS -fPIC)
+            add_definitions(-DHAVE_NEON)
+            add_definitions(${ARM_ARGS})
         else()
             set(ARM_ARGS -march=armv6 -mfloat-abi=soft -mfpu=vfp -marm -fPIC)
         endif()
@@ -249,6 +259,7 @@ if(GCC)
         if(ARM64)
             set(ARM_ARGS -fPIC)
             add_definitions(-DHAVE_NEON)
+            add_definitions(${ARM_ARGS})
         else()
             find_package(Neon)
             if(CPU_HAS_NEON)
@@ -299,16 +310,16 @@ if(GCC)
         list(APPEND LINKER_OPTIONS "-static-libgcc")
     endif(STATIC_LINK_CRT)
     check_cxx_compiler_flag(-Wno-strict-overflow CC_HAS_NO_STRICT_OVERFLOW)
-    check_cxx_compiler_flag(-Wno-narrowing CC_HAS_NO_NARROWING) 
-    check_cxx_compiler_flag(-Wno-array-bounds CC_HAS_NO_ARRAY_BOUNDS) 
+    check_cxx_compiler_flag(-Wno-narrowing CC_HAS_NO_NARROWING)
+    check_cxx_compiler_flag(-Wno-array-bounds CC_HAS_NO_ARRAY_BOUNDS)
     if (CC_HAS_NO_ARRAY_BOUNDS)
         add_definitions(-Wno-array-bounds) # these are unhelpful
     endif()
-    check_cxx_compiler_flag(-ffast-math CC_HAS_FAST_MATH) 
+    check_cxx_compiler_flag(-ffast-math CC_HAS_FAST_MATH)
     if (CC_HAS_FAST_MATH)
         add_definitions(-ffast-math)
     endif()
-    check_cxx_compiler_flag(-mstackrealign CC_HAS_STACK_REALIGN) 
+    check_cxx_compiler_flag(-mstackrealign CC_HAS_STACK_REALIGN)
     if (CC_HAS_STACK_REALIGN)
         add_definitions(-mstackrealign)
     endif()
